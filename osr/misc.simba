(*
Misc
====
*)

{$DEFINE SRL_MISC_INCLUDED}
{$IFNDEF SRL_OSR}
  {$I SRL/osr.simba}
{$ENDIF}

const
  RS_ITEM_SHADOW       = $202030;
  RS_ITEM_BORDER       = $010000;

  RS_ITEM_YELLOW_STACK = $00FFFF;
  RS_ITEM_WHITE_STACK  = $FFFFFF;
  RS_ITEM_GREEN_STACK  = $80FF00;

(*
SRL.GetXPAtLevel
~~~~~~~~~~~~~~~~
.. pascal:: function TSRL.GetXPAtLevel(level:Int32): Int32;

Given a level it returns the minimum XP needed for it.
*)
function TSRL.GetXPAtLevel(level:Int32): Int32; constref;
var
  total:Double;
  i:Int32;
begin
  for i:=1 to level-1 do
    total += Floor(i + 300 * 2 ** (i / 7));
  Result := Floor(total / 4);
end;

(*
SRL.GetLevelAtXP
~~~~~~~~~~~~~~~~
.. pascal:: function TSRL.GetLevelAtXP(XP:UInt32): Int32;

Given some XP, it returns what level that is.
*)
function TSRL.GetLevelAtXP(XP:UInt32): Int32; constref;
var 
  total:Double;
begin
  while (total < XP*4+1) do
  begin  
    Inc(Result);
    total += Floor(Result + 300 * 2 ** (Result / 7));
  end;
end;

(*
SRL.GetItemAmount
~~~~~~~~~~~~~~~~~
.. pascal:: function TSRL.GetItemAmount(constref Area: TBox): Int32;

For use with items in like bankscreen, inventory, shops and so on to
get the number of stacked items there are.
*)
function TSRL.GetItemAmount(constref Area: TBox): Int32; constref;
begin
  if SRL.CountColor(RS_ITEM_YELLOW_STACK, Area) > 0 then
    Result := OCR.RecognizeNumber(Area, [RS_ITEM_YELLOW_STACK], RS_FONT_PLAIN_11)
  else
  if SRL.CountColor(RS_ITEM_WHITE_STACK, Area) > 0 then
    Result := OCR.RecognizeNumber(Area, [RS_ITEM_WHITE_STACK], RS_FONT_PLAIN_11) * 1000
  else
  if SRL.CountColor(RS_ITEM_GREEN_STACK, Area) > 0 then
    Result := OCR.RecognizeNumber(Area, [RS_ITEM_GREEN_STACK], RS_FONT_PLAIN_11) * 1000000;
end;

(*
SRL.AvgBrightness
~~~~~~~~~~~~~~~~~
.. pascal:: function TSRL.AvgBrightness(B: TBox): Int32;

Returns the average brightness of a area on the screen. 
Returns a value between ``0`` and ``100``, ``0`` being black.
*)
function TSRL.AvgBrightness(B: TBox): Int32; constref;
var
  BMP: TMufasaBitmap;
begin
  BMP.FromClient(B);
  Result := BMP.AvgBrightness();
  BMP.Free();
end;

(*
SRL.PeakBrightness
~~~~~~~~~~~~~~~~~~
.. pascal:: function TSRL.PeakBrightness(B: TBox): Int32;

Returns the peak brightness of a area on the screen. 
Returns a value between ``0`` and ``100``, ``0`` being black.
*)
function TSRL.PeakBrightness(B: TBox): Int32; constref;
var
  BMP: TMufasaBitmap;
begin
  BMP.FromClient(B);
  Result := BMP.PeakBrightness();
  BMP.Free();
end;

function TSRL.FormatNumber(n:Extended; dec:Byte = 3): String; constref;
var
  i: Int32;
  f: Extended := n;
begin
  while (Abs(f) >= 1000) do
  begin
    Inc(i);
    f := f / 1000;
  end;

  Result := FloatToStr(Round(f,dec)) + (['','K','M','B','T'])[i]
end;



