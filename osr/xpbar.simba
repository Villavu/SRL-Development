(*
XPBar
=====
Methods to interact with the XP bar.
*)
{$DEFINE SRL_XPBAR_INCLUDED}
{$IFNDEF SRL_OSR}
  {$I SRL/osr.simba}
{$ENDIF}

type
  TRSXPBar = record(TRSInterface)
    Alignments: array of TRSInterfaceAlignment;
    Font: TFontSet;
    IsSetup: Boolean;
  end;

(*
XPBar.Setup
~~~~~~~~~~~
.. pascal:: procedure TRSXPBar.Setup(); override;

Initializes **XPBar** variables.

.. note:: This is automatically called on the **XPBar** variable.
*)
procedure TRSXPBar.Setup(); override;
begin
  inherited;

  Self.Name := 'XPBar';

  SetLength(Self.Alignments, 3);

  with Self.Alignments[0] do
  begin
    Left := [@InterfaceArea.X1, 2];
    Right := [@InterfaceArea.X1, 141];
    Top := [@InterfaceArea.Y1, 23];
    Bottom := [@InterfaceArea.Y1, 51];
  end;

  with Self.Alignments[1] do
  begin
    Left   := [@InterfaceArea.X1];
    Right  := [@InterfaceArea.X2];
    Top    := [@InterfaceArea.Y1, 23];
    Bottom := [@InterfaceArea.Y1, 51];
    Center.MaxWidth := 140;
  end;

  with Self.Alignments[2] do
  begin
    Left := [@InterfaceArea.X2, -141];
    Right := [@InterfaceArea.X2, -2];
    Top := [@InterfaceArea.Y1, 0];
    Bottom := [@InterfaceArea.Y1, 28];
  end;
end;

(*
XPBar.IsEnabled
~~~~~~~~~~~~~~~
.. pascal:: function TRSXPBar.IsEnabled(): Boolean;

Checks if the XPBar circle is enabled.

Example
-------

  WriteLn XPBar.IsEnabled();
*)
function TRSXPBar.IsEnabled(): Boolean;
var
  TPA: TPointArray;
begin
  if FindColors(TPA, 11592943, Minimap.GetXPCircle.Bounds) then
    Result := Length(Minimap.GetXPCircle().Filter(TPA)) > 50;
end;

(*
XPBar.Enable
~~~~~~~~~~~~
.. pascal:: function TRSXPBar.Enable(): Boolean;

Enables the XPBar by clicking the XPBar circle.

Example
-------

  if not XPBar.IsEnabled() then
    WriteLn XPBar.Enable();
*)
function TRSXPBar.Enable(): Boolean;
begin
  if Self.IsEnabled() then
    Exit(True);

  Mouse.Click(Minimap.GetXPCircle(), MOUSE_LEFT);

  Result := WaitUntil(Self.IsEnabled(), SRL.TruncatedGauss(100, 1000), 3000);
end;

(*
XPBar._Setup
~~~~~~~~~~~~
.. pascal:: procedure TRSXPBar._Setup();

Internal method automatically called by SRL once when attempting to read the XPBar.
*)
procedure TRSXPBar._Setup();
var
  tpa: TPointArray;
  b: TBox;
begin
  if not Self.Enable() then
    Exit;

  for Self.Alignment in Self.Alignments do
  begin
    if SRL.FindColors(tpa, $FFFFFF, Self.Bounds()) > 0 then
      Break;
    Self.Cache := [];
  end;

  if tpa = [] then
  begin
    Self.Alignment := [];
    Self.Cache := [];
    Self.Font := [];
    Exit;
  end;

  case tpa.Bounds().Height() of
    8:  Self.Font := RS_FONT_PLAIN_11;
    11: Self.Font := RS_FONT_PLAIN_12;
    10: Self.Font := RS_FONT_BOLD_12; //it's actually less tall lol.
    else
    begin
      Self.Alignment := [];
      Self.Cache := [];
      Self.Font := [];
      Exit;
    end;
  end;

  Self.IsSetup := True;
end;

(*
XPBar.Read
~~~~~~~~~~
.. pascal:: function TRSXPBar.Read(): Int32;

Reads the XP in the XPBar.

Example
-------

  WriteLn XPBar.Read();
*)
function TRSXPBar.Read(): Int32;
begin
  if not Self.IsSetup then
    Self._Setup();

  //Self._Setup() already checks Self.IsEnabled() but it's only called once.
  if not Self.IsSetup or not Self.Enable() then
    Exit;

  Result := OCR.RecognizeNumber(Self.Bounds(), TOCRColorRule.Create([$FFFFFF]), Self.Font);
end;

(*
XPBar.IsOpen
~~~~~~~~~~~~
.. pascal:: function TRSXPBar.IsOpen(): Boolean;

Checks if the XPBar is open.
Keep in mind interfaces and things that cover the xp bar, might make this return false.

Example
-------

  WriteLn XPBar.IsOpen();
*)
function TRSXPBar.IsOpen(): Boolean;
begin
  Result := Self.Read() > 0;
end;

(*
XPBar.Open
~~~~~~~~~~
.. pascal:: function TRSXPBar.Open(): Boolean;

Attempts to open the XPBar if it's not open.

Example
-------
  if not XPBar.IsOpen() then
    WriteLn XPBar.Open();
*)
function TRSXPBar.Open(): Boolean;
begin
  if Self.IsOpen() then
    Exit(True);

  Result := WaitUntil(Self.IsOpen(), SRL.TruncatedGauss(100, 1000), 3000);

  if not Result then
    Self.DebugLn('Something is wrong with your XPBar.');
end;

procedure TRSXPBar.Draw(Bitmap: TMufasaBitmap); override;
begin
  if not Self.IsOpen() then
    Exit;

  inherited;
end;

(*
var XPBar
~~~~~~~~~
  Global XPBar variable.
*)
var
  XPBar: TRSXPBar;

procedure TRSClient.ClientModeChanged(); override;
begin
  inherited;

  XPBar.SetupAlignment(Self.Mode);
end;

procedure TSRL.Setup(); override;
begin
  inherited;

  XPBar.Setup();
end;

procedure TSRL.Debug(Bitmap: TMufasaBitmap); override;
begin
  inherited;

  XPBar.Draw(Bitmap);
end;
