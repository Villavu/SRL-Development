{$DEFINE SRL_XPBAR_INCLUDED}
{$IFNDEF SRL_OSR}
  {$I SRL/osr.simba}
{$ENDIF}

type
  TRSXPBar = record(TRSInterface)
    ButtonOffset: TPoint;
  end;

procedure TRSXPBar.Setup; override;
begin
  inherited;

  Self.Name := 'XPBar';
end;

procedure TRSXPBar.SetupAlignment(Mode: ERSClientMode); override;
begin
  inherited;

  Self.Alignment.Left := [@InterfaceArea.X2, -120];
  Self.Alignment.Right := [@InterfaceArea.X2, -2];
  Self.Alignment.Top := [@InterfaceArea.Y1, 2];
  Self.Alignment.Bottom := [@InterfaceArea.Y1, 30];

  case Self.Mode of
    ERSClientMode.RESIZABLE_CLASSIC: Self.ButtonOffset := [173, 38];
    ERSClientMode.RESIZABLE_MODERN:  Self.ButtonOffset := [138, 38];
    ERSClientMode.FIXED:             Self.ButtonOffset := [134, 28];
  end;
end;

function TRSXPBar.GetButtonCircle: TCircle;
begin
  Result := [Self.X1 + ButtonOffset.X, Self.Y1 + ButtonOffset.Y, 11];
end;

function TRSXPBar.IsOpen: Boolean;
var
  TPA: TPointArray;
begin
  if FindColors(TPA, 11592943, GetButtonCircle().Bounds()) then
    Result := Length(GetButtonCircle().Filter(TPA)) > 50;
end;

procedure TRSXPBar.Draw(Bitmap: TMufasaBitmap); override;
begin
  if not Self.IsOpen() then
    Exit;

  with Self.GetButtonCircle() do
    Bitmap.DrawCircle([X, Y], Radius, False, $00FFFF);

  inherited;
end;

function TRSXPBar.Read: Int32;
begin
  Result := OCR.RecognizeNumber(Self.Bounds, [$FFFFFF], RS_FONT_PLAIN_11);
end;

var
  XPBar: TRSXPBar;

procedure TRSClient.ClientModeChanged; override;
begin
  inherited;

  XPBar.SetupAlignment(Self.Mode);
end;

procedure TSRL.Setup; override;
begin
  inherited;

  XPBar.Setup();
end;

procedure TSRL.Debug(Bitmap: TMufasaBitmap); override;
begin
  inherited;

  XPBar.Draw(Bitmap);
end;
