{$DEFINE SRL_DEPOSITSCREEN_INCLUDED}
{$IFNDEF SRL_OSR}
  {$I SRL/osr.simba}
{$ENDIF}

type
  ERSDepositButton = (
    CLOSE,
    
    QUANTITY_1,
    QUANTITY_5,
    QUANTITY_10,
    QUANTITY_CUSTOM,
    QUANTITY_ALL,
    
    DEPOSIT_INVENTORY,
    DEPOSIT_WORN,
    DEPOSIT_LOOT
  );

  TRSDepositScreen = type TRSInterface;

procedure TRSDepositScreen.Setup; override;
begin
  inherited;

  Self.Name := 'Deposit Screen';
end;

procedure TRSDepositScreen.SetupAlignment(Mode: ERSClientMode); override;
begin
  inherited;

  case Self.Mode of
    ERSClientMode.FIXED:
      begin
        Self.Alignment.Left := [@InterfaceArea.X1];
        Self.Alignment.Right := [@InterfaceArea.X2];
        Self.Alignment.Top := [@InterfaceArea.Y1];
        Self.Alignment.Bottom := [@InterfaceArea.Y2];
        Self.Alignment.Center.MaxWidth := 452;
        Self.Alignment.Center.MaxHeight := 276;
      end;

    ERSClientMode.RESIZABLE_CLASSIC, ERSClientMode.RESIZABLE_MODERN:
      begin
        Self.Alignment.Left := [@InterfaceArea.X1];
        Self.Alignment.Right := [@InterfaceArea.X2];
        Self.Alignment.Top := [@InterfaceArea.Y1, -1];
        Self.Alignment.Bottom := [@InterfaceArea.Y2];
        Self.Alignment.Center.MaxWidth := 452;
        Self.Alignment.Center.MaxHeight := 276;
      end;
  end;
end;

function TRSDepositScreen.GetButtons: TRSButtonArray;
begin
  Result := Self.FindButtons([[21,21], [34,34]]);
end;

function TRSDepositScreen.GetButton(Button: ERSDepositButton): TRSButton;
var
  Buttons: TRSButtonArray := Self.GetButtons();
begin
  if (Length(Buttons) = Length(ERSDepositButton)) then
    Result := Buttons[Button];
end;

function TRSDepositScreen.GetSlotBoxes: TBoxArray; 
begin
  Result := Grid(7, 4, 31, 31, [25, 17], [Self.X1 + 38, Self.Y1 + 42]);
end;

function TRSDepositScreen.IsOpen: Boolean; overload;
begin
  Result := Self.GetButton(ERSDepositButton.CLOSE).Visible();
end;

function TRSDepositScreen.IsOpen(WaitTime: Int32): Boolean; overload;
begin
  Result := WaitUntil(Self.IsOpen(), SRL.TruncatedGauss(50, 1500), WaitTime);
end;

procedure TRSDepositScreen.Draw(Bitmap: TMufasaBitmap); override;
begin
  if not Self.IsOpen() then
    Exit;

  inherited;

  Bitmap.DrawBoxes(GetSlotBoxes(), False, $00FFFF);
end;

var
  DepositScreen: TRSDepositScreen;

procedure TRSClient.ClientModeChanged; override;
begin
  inherited;

  DepositScreen.SetupAlignment(Self.Mode);
end;

procedure TSRL.Setup; override;
begin
  inherited;

  DepositScreen.Setup();
end;

procedure TSRL.Debug(Bitmap: TMufasaBitmap); override;
begin
  inherited;

  DepositScreen.Draw(Bitmap);
end;
