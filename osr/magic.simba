(*
Magic
=====
Methods to interact with the magic tab.
*)

{$DEFINE SRL_MAGIC_INCLUDED}
{$IFNDEF SRL_OSR}
  {$I SRL/osr.simba}
{$ENDIF}

type
  ERSSpellBook = (
    STANDARD,
    ANCIENT,
    LUNAR,
    ARCEUUS
  );

  ERSSpell = (
    UNKNOWN,
    
    // Standard
    LUMBRIDGE_HOME_TELEPORT,
    WIND_STRIKE,
    CONFUSE,
    ENCHANT_CROSSBOW_BOLT,
    WATER_STRIKE,
    LVL1_ENCHANT,
    EARTH_STRIKE,

    WEAKEN,
    FIRE_STRIKE,
    BONES_TO_BANANAS,
    WIND_BOLT,
    CURSE,
    BIND,
    LOW_LEVEL_ALCHEMY,

    WATER_BOLT,
    VARROCK_TELEPORT,
    LVL2_ENCHANT,
    EARTH_BOLT,
    LUMBRIDGE_TELEPORT,
    TELEKINETIC_GRAB,
    FIRE_BOLT,

    FALADOR_TELEPORT,
    CRUMBLE_UNDEAD,
    TELEPORT_TO_HOUSE,
    WIND_BLAST,
    SUPERHEAT_ITEM,
    CAMELOT_TELEPORT,
    WATER_BLAST,

    LVL3_ENCHANT,
    IBAN_BLAST,
    SNARE,
    MAGIC_DART,
    ARDOUGNE_TELEPORT,
    EARTH_BLAST,
    HIGH_LEVEL_ALCHEMY,

    CHARGE_WATER_ORB,
    LVL4_ENCHANT,
    WATCHTOWER_TELEPORT,
    FIRE_BLAST,
    CHARGE_EARTH_ORB,
    BONES_TO_PEACHES,
    SARADOMIN_STRIKE,

    CLAWS_OF_GUTHIX,
    FLAMES_OF_ZAMORAK,
    TROLLHEIM_TELEPORT,
    WIND_WAVE,
    CHARGE_FIRE_ORB,
    TELEPORT_TO_APE_ATOLL,
    WATER_WAVE,

    CHARGE_AIR_ORB,
    VULNERABILITY,
    LVL5_ENCHANT,
    TELEPORT_TO_KOUREND,
    EARTH_WAVE,
    ENFEEBLE,
    TELEOTHER_LUMBRIDGE,

    FIRE_WAVE,
    ENTANGLE,
    STUN,
    CHARGE,
    WIND_SURGE,
    TELEOTHER_FALADOR,
    WATER_SURGE,

    TELE_BLOCK,
    STANDARD_TARGET_TELEPORT,
    LVL6_ENCHANT,
    TELEOTHER_CAMELOT,
    EARTH_SURGE,
    LVL7_ENCHANT,
    FIRE_SURGE,
    
    // Ancient
    EDGEVILLE_HOME_TELEPORT,
    SMOKE_RUSH,
    SHADOW_RUSH,
    PADDEWWA_TELEPORT,

    BLOOD_RUSH,
    ICE_RUSH,
    SENNTISTEN_TELEPORT,
    SMOKE_BURST,

    SHADOW_BURST,
    KHARYRLL_TELEPORT,
    BLOOD_BURST,
    ICE_BURST,

    LASSAR_TELEPORT,
    SMOKE_BLITZ,
    SHADOW_BLITZ,
    DAREEYAK_TELEPORT,

    BLOOD_BLITZ,
    ICE_BLITZ,
    CARRALLANGAR_TELEPORT,
    ANCIENT_TARGET_TELEPORT,

    SMOKE_BARRAGE,
    SHADOW_BARRAGE,
    ANNAKARL_TELEPORT,
    BLOOD_BARRAGE,

    ICE_BARRAGE,
    GHORROCK_TELEPORT,
    
    // Lunar
    LUNAR_HOME_TELEPORT,
    BAKE_PIE,
    GEOMANCY,
    CURE_PLANT,
    MONSTER_EXAMINE,

    NPC_CONTACT,
    CURE_OTHER,
    HUMIDIFY,
    MOONCLAN_TELEPORT,
    TELE_GROUP_MOONCLAN,

    CURE_ME,
    OURANIA_TELEPORT,
    HUNTER_KIT,
    WATERBIRTH_TELEPORT,
    TELE_GROUP_WATERBIRTH,

    CURE_GROUP,
    STAT_SPY,
    BARBARIAN_TELEPORT,
    TELE_GROUP_BARBARIAN,
    SPIN_FLAX,

    SUPERGLASS_MAKE,
    TAN_LEATHER,
    KHAZARD_TELEPORT,
    TELE_GROUP_KHAZARD,
    DREAM,

    STRING_JEWELLERY,
    STAT_RESTORE_POT_SHARE,
    MAGIC_IMBUE,
    FERTILE_SOIL,
    BOOST_POTION_SHARE,

    FISHING_GUILD_TELEPORT,
    BOUNTY_TELEPORT,
    TELE_GROUP_FISHING_GUILD,
    PLANK_MAKE,
    CATHERBY_TELEPORT,

    TELE_GROUP_CATHERBY,
    RECHARGE_DRAGONSTONE,
    ICE_PLATEU_TELEPORT,
    TELE_GROUP_ICE_PLATEU,
    ENERGY_TRANSFER,

    HEAL_OTHER,
    VENGEANCE_OTHER,
    VENGEANCE,
    HEAL_GROUP,
    SPELLBOOK_SWAP,
    
    // Arceuus
    ARCEUUS_HOME_TELEPORT,
    ARCEUUS_LIBRARY_TELEPORT,
    BASIC_REANIMATION,
    DRAYNOR_MANOR_TELEPORT,
    BATTLEFRONT_TELEPORT,

    MIND_ALTAR_TELEPORT,
    RESPAWN_TELEPORT,
    GHOSTLY_GRASP,
    RESURRECT_LESSER_GHOST,
    RESURRECT_LESSER_SKELETON,

    RESURRECT_LESSER_ZOMBIE,
    SALVE_GRAVEYARD_TELEPORT,
    ADEPT_REANIMATION,
    INFERIOR_DEMONBANE,
    SHADOW_VEIL,

    FENKENSTRAINS_CASTLE_TELEPORT,
    DARK_LURE,
    SKELETAL_GRASP,
    RESURRECT_SUPERIOR_GHOST,
    RESURRECT_SUPERIOR_SKELETON,

    RESURRECT_SUPERIOR_ZOMBIE,
    MARK_OF_DARKNESS,
    WEST_ARDOUGNE_TELEPORT,
    SUPERIOR_DEMONBANE,
    LESSER_CORRUPTION,

    HARMONY_ISLAND_TELEPORT,
    VILE_VIGOUR,
    DEGRIME,
    CEMETERY_TELEPORT,
    EXPERT_REANIMATION,

    WARD_OF_ARCEUUS,
    RESURRECT_GREATER_GHOST,
    RESURRECT_GREATER_SKELETON,
    RESURRECT_GREATER_ZOMBIE,
    RESURRECT_CROPS,

    UNDEAD_GRASP,
    DEATH_CHARGE,
    DARK_DEMONBANE,
    BARROWS_TELEPORT,
    DEMONIC_OFFERING,

    GREATER_CORRUPTION,
    MASTER_REANIMATION,
    APE_ATOLL_TELEPORT,
    SINISTER_OFFERING
  );

const
  RS_STANDARD_SPELL_FIRST = ERSSpell.LUMBRIDGE_HOME_TELEPORT;
  RS_STANDARD_SPELL_LAST  = ERSSpell.FIRE_SURGE;

  RS_ANCIENT_SPELL_FIRST  = ERSSpell.EDGEVILLE_HOME_TELEPORT;
  RS_ANCIENT_SPELL_LAST   = ERSSpell.GHORROCK_TELEPORT;
  
  RS_LUNAR_SPELL_FIRST    = ERSSpell.LUNAR_HOME_TELEPORT;
  RS_LUNAR_SPELL_LAST     = ERSSpell.SPELLBOOK_SWAP;

  RS_ARCEUUS_SPELL_FIRST  = ERSSpell.ARCEUUS_HOME_TELEPORT;
  RS_ARCEUUS_SPELL_LAST   = ERSSpell.SINISTER_OFFERING;
  
  RS_STANDARD_SPELLS = [RS_STANDARD_SPELL_FIRST..RS_STANDARD_SPELL_LAST];
  RS_ANCIENT_SPELLS  = [RS_ANCIENT_SPELL_FIRST..RS_ANCIENT_SPELL_LAST];
  RS_LUNAR_SPELLS    = [RS_LUNAR_SPELL_FIRST..RS_LUNAR_SPELL_LAST];
  RS_ARCEUUS_SPELLS  = [RS_ARCEUUS_SPELL_FIRST..RS_ARCEUUS_SPELL_LAST];
  
type
  TRSMagic = type TRSInterface;

(*
Magic.Setup
~~~~~~~~~~~
.. pascal:: procedure TRSMagic.Setup; ; override;

Initializes **Magic** variables.

.. note:: This is automatically called on the **Magic** variable.
*)
procedure TRSMagic.Setup; override;
begin
  inherited;
  
  Self.Name := 'Magic';
end;

(*
Magic.SetupAlignment
~~~~~~~~~~~~~~~~~~~~
.. pascal:: procedure TRSMagic.SetupAlignment(Mode: ERSClientMode); override;

Setups up the interface aligment for the current client mode.

.. note:: This is automatically called on the **TRSClient.ClientModeChanged** function.
*)
procedure TRSMagic.SetupAlignment(Mode: ERSClientMode); override;
begin
  inherited;

  Self.Alignment.Left := [@GameTab.X1];
  Self.Alignment.Right := [@GameTab.X2];
  Self.Alignment.Top := [@GameTab.Y1];
  Self.Alignment.Bottom := [@GameTab.Y2];
end;

(*
Magic.IsOpen
~~~~~~~~~~~~
.. pascal:: function TRSMagic.IsOpen: Boolean;

Returns true if the Magic tab is open.

Example
-------

  WriteLn Magic.IsOpen;
*)
function TRSMagic.IsOpen: Boolean;
begin
  Result := (GameTabs.GetCurrentTab() = ERSGameTab.MAGIC);
end;

(*
Magic.Open
~~~~~~~~~~
.. pascal:: function TRSMagic.Open: Boolean;

Attempts to open the magic tab.

Example
-------

  Magic.Open;
*)
function TRSMagic.Open: Boolean;
begin
  Result := Self.IsOpen() or GameTabs.Open(ERSGameTab.MAGIC);
end;

(*
Magic.GetSpellBook
~~~~~~~~~~~~~~~~~~
.. pascal:: function TRSMagic.GetSpellBook: ERSSpellBook;

Returns the current spell book.

Example
-------

  WriteLn Magic.GetSpellBook;
*)
function TRSMagic.GetSpellBook: ERSSpellBook;
const
  ARCEUUS_COLOR := CTS0(9801276, 78); // Colors of the book on the gametab
  ANCIENT_COLOR := CTS1(8273495, 27);
  LUNAR_COLOR   := CTS1(12761525, 27);
var
  Box: TBox := Gametabs.GetTabBox(ERSGameTab.MAGIC); 
begin
  if SRL.CountColor(ARCEUUS_COLOR, Box) >= 85 then Exit(ERSSpellBook.ARCEUUS);
  if SRL.CountColor(ANCIENT_COLOR, Box) >= 85 then Exit(ERSSpellBook.ANCIENT);
  if SRL.CountColor(LUNAR_COLOR,   Box) >= 85 then Exit(ERSSpellBook.LUNAR);
end;

(*
Magic.IsSpellBook
~~~~~~~~~~~~~~~~~
.. pascal:: function TRSMagic.IsSpellBook(SpellBook: ERSSpellBook): Boolean;

Returns true if we are using the specified spell book.

Example
-------

  WriteLn Magic.IsSpellBook(ERSSpellBook.LUNAR);
*)
function TRSMagic.IsSpellBook(SpellBook: ERSSpellBook): Boolean;
begin
  Result := SpellBook = Self.GetSpellBook();
end;

(*
Magic.GetSpellBoxes
~~~~~~~~~~~~~~~~~~~
.. pascal:: function TRSMagic.GetSpellBoxes(out Spellbook: ERSSpellBook): TBoxArray;

Internal function to get the bounds of the spells of the current spell book.
*)
function TRSMagic.GetSpellBoxes(out Spellbook: ERSSpellBook): TBoxArray;
begin 
  Spellbook := Self.GetSpellBook;
  case Spellbook of
    ERSSpellBook.STANDARD: Result := Grid(7, 10, 23, 23, [3, 1],   [Self.X1 + 2, Self.Y1 + 1]);
    ERSSpellBook.ARCEUUS:  Result := Grid(5, 9,  23, 23, [17, 4],  [Self.X1, Self.Y1 + 1]);
    ERSSpellBook.LUNAR:    Result := Grid(5, 9,  23, 23, [17, 4],  [Self.X1 + 2, Self.Y1 + 1]);
    ERSSpellBook.ANCIENT:  Result := Grid(4, 7,  23, 23, [25, 13], [Self.X1 + 8, Self.Y1 + 1]);
  end;
end;

(*
Magic.GetSpellBox
~~~~~~~~~~~~~~~~~
.. pascal:: function TRSMagic.GetSpellBox(Spell: ERSSpell; out Box: TBox): Boolean;

Internal function to get the specified spell bounds.
*)
function TRSMagic.GetSpellBox(Spell: ERSSpell; out Box: TBox): Boolean;
var
  Spellbook: ERSSpellBook;
  Boxes: TBoxArray;
begin
  Boxes := Self.GetSpellBoxes(Spellbook);
  
  case Spellbook of
    ERSSpellBook.STANDARD: 
      begin
        Result := (Spell in RS_STANDARD_SPELLS); 
        if Result then 
          Box := Boxes[Spell - Ord(RS_STANDARD_SPELL_FIRST)];
      end;
    
    ERSSpellBook.ARCEUUS: 
      begin
        Result := (Spell in RS_ARCEUUS_SPELLS); 
        if Result then 
          Box := Boxes[Spell - Ord(RS_ARCEUUS_SPELL_FIRST)];
      end;
      
    ERSSpellBook.LUNAR: 
      begin
        Result := (Spell in RS_LUNAR_SPELLS); 
        if Result then 
          Box := Boxes[Spell - Ord(RS_LUNAR_SPELL_FIRST)];
      end;
      
    ERSSpellBook.ANCIENT: 
      begin
        Result := (Spell in RS_ANCIENT_SPELLS); 
        if Result then 
          Box := Boxes[Spell - Ord(RS_ANCIENT_SPELL_FIRST)];
      end;     
  end;
end;

(*
Magic.MouseSpell
~~~~~~~~~~~~~~~~
.. pascal:: function TRSMagic.MouseSpell(Spell: ERSSpell; Button: Int32 = MOUSE_MOVE): Boolean;

Used to interact with the specified spell.

Example
-------

  Magic.MouseSpell(ERSSpell.HIGH_LEVEL_ALCHEMY, MOUSE_LEFT);
*)
function TRSMagic.MouseSpell(Spell: ERSSpell; Button: Int32 = MOUSE_MOVE): Boolean;
var
  Box: TBox;
begin
  Result := Self.Open() and Self.GetSpellBox(Spell, Box);

  if Result then
  begin
    Mouse.Move(Box);
    if (Button <> MOUSE_MOVE) then
      Mouse.Click(Button);
  end;
end;

(*
Magic.CanActivate
~~~~~~~~~~~~~~~~~
.. pascal:: function TRSMagic.CanActivate(Spell: ERSSpell): Boolean;

Returns true if we can activate the spell (we have runes, level and the spell unlocked).

Example
-------

  Magic.CanActivate(ERSSpell.HIGH_LEVEL_ALCHEMY);
*)
function TRSMagic.CanActivate(Spell: ERSSpell): Boolean;
var
  Box: TBox;
begin
  Result := Self.GetSpellBox(Spell, Box) and Self.Open() and (SRL.PeakBrightness(Box) > 35);
end;

(*
Magic.IsSpellSelected
~~~~~~~~~~~~~~~~~~~~~
.. pascal:: function TRSMagic.IsSpellSelected(Spell: ERSSpell): Boolean;

Returns true if the specified spell is currently active (with white outline).

Example
-------

  Magic.IsSpellSelected(ERSSpell.ICE_BARRAGE);
*)
function TRSMagic.IsSpellSelected(Spell: ERSSpell): Boolean; 
var
  Box: TBox;
begin
  Result := Self.GetSpellBox(Spell, Box) and Self.Open() and (SRL.CountColor($FFFFFF, Box) > 10);
end;

(*
Magic.GetSelectedSpell
~~~~~~~~~~~~~~~~~~~~~~
.. pascal:: function TRSMagic.GetSelectedSpell: ERSSpell;

Returns the currently selected spell.

Example
-------

  WriteLn Magic.GetSelectedSpell;
*)
function TRSMagic.GetSelectedSpell: ERSSpell;
var
  I: Int32;
  Spellbook: ERSSpellBook;
  Boxes: TBoxArray;
begin
  if not Self.IsOpen() then
    Exit;
    
  Boxes := Self.GetSpellBoxes(Spellbook);
 
  for I := 0 to High(Boxes) do 
    if SRL.CountColor($FFFFFF, Boxes[I]) > 30 then
    case SpellBook of
      ERSSpellBook.STANDARD: Exit(ERSSpell(RS_STANDARD_SPELL_FIRST + I));
      ERSSpellBook.ARCEUUS:  Exit(ERSSpell(RS_ARCEUUS_SPELL_FIRST + I));
      ERSSpellBook.LUNAR:    Exit(ERSSpell(RS_LUNAR_SPELL_FIRST + I));
      ERSSpellBook.ANCIENT:  Exit(ERSSpell(RS_ANCIENT_SPELL_FIRST + I));
    end;
end;

(*
Magic.CastSpell
~~~~~~~~~~~~~~~
.. pascal:: function TRSMagic.CastSpell(Spell: ERSSpell): Boolean;

Attempts to cast the specified spell.

Example
-------

  Magic.CastSpell(ERSSpell.LOW_LEVEL_ALCHEMY);
*)
function TRSMagic.CastSpell(Spell: ERSSpell): Boolean;
var
  Selected: ERSSpell;
begin
  if not Self.Open() then
    Exit(False); 

  Selected := Self.GetSelectedSpell();
  if (Selected := Self.GetSelectedSpell()) = Spell then
    Exit(True);
    
  // Unselect
  if (Selected <> ERSSpell.UNKNOWN) then
    Self.MouseSpell(Selected, MOUSE_LEFT);
 
  Result := Self.MouseSpell(Spell, MOUSE_LEFT) and WaitUntil((Self.IsOpen() and (Self.GetSelectedSpell() = Spell)) or Inventory.IsOpen(), 100, SRL.TruncatedGauss(1000, 2000));
end;

procedure TRSMagic.Draw(Bitmap: TMufasaBitmap); override;
var
  Spellbook: ERSSpellBook;
begin
  if not Self.IsOpen() then
    Exit;

  inherited();

  Bitmap.DrawBoxes(Self.GetSpellBoxes(Spellbook), $00FFFF);
end;

(*
var Magic
~~~~~~~~~~
  Global Magic variable.
*)
var
  Magic: TRSMagic;

procedure TRSClient.ClientModeChanged; override;
begin
  inherited;

  Magic.SetupAlignment(Self.Mode);
end;

procedure TSRL.Setup; override;
begin
  inherited;

  Magic.Setup();
end;

procedure TSRL.Debug(Bitmap: TMufasaBitmap); override;
begin
  inherited;

  Magic.Draw(Bitmap);
end;
